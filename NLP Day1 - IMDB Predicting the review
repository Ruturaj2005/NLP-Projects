{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":320111,"sourceType":"datasetVersion","datasetId":134715}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-06-03T16:58:23.017794Z","iopub.execute_input":"2025-06-03T16:58:23.018046Z","iopub.status.idle":"2025-06-03T16:58:23.419372Z","shell.execute_reply.started":"2025-06-03T16:58:23.018024Z","shell.execute_reply":"2025-06-03T16:58:23.418095Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/imdb-dataset-of-50k-movie-reviews/IMDB Dataset.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"base_path='/kaggle/input/imdb-dataset-of-50k-movie-reviews'","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:12:17.107607Z","iopub.execute_input":"2025-06-03T17:12:17.107959Z","iopub.status.idle":"2025-06-03T17:12:17.112538Z","shell.execute_reply.started":"2025-06-03T17:12:17.107933Z","shell.execute_reply":"2025-06-03T17:12:17.111661Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/imdb-dataset-of-50k-movie-reviews/IMDB Dataset.csv')\nprint(df.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:13:02.861088Z","iopub.execute_input":"2025-06-03T17:13:02.861436Z","iopub.status.idle":"2025-06-03T17:13:04.802380Z","shell.execute_reply.started":"2025-06-03T17:13:02.861412Z","shell.execute_reply":"2025-06-03T17:13:04.801557Z"}},"outputs":[{"name":"stdout","text":"                                              review sentiment\n0  One of the other reviewers has mentioned that ...  positive\n1  A wonderful little production. <br /><br />The...  positive\n2  I thought this was a wonderful way to spend ti...  positive\n3  Basically there's a family where a little boy ...  negative\n4  Petter Mattei's \"Love in the Time of Money\" is...  positive\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"import re\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\nnltk.download('stopwords')\nnltk.download('wordnet')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:15:23.115067Z","iopub.execute_input":"2025-06-03T17:15:23.115438Z","iopub.status.idle":"2025-06-03T17:15:24.903051Z","shell.execute_reply.started":"2025-06-03T17:15:23.115412Z","shell.execute_reply":"2025-06-03T17:15:24.902081Z"}},"outputs":[{"name":"stderr","text":"[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n[nltk_data] Downloading package wordnet to /usr/share/nltk_data...\n[nltk_data]   Package wordnet is already up-to-date!\n","output_type":"stream"},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"True"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"stop_words = set(stopwords.words('english'))\nlemmatizer = WordNetLemmatizer()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:15:45.735250Z","iopub.execute_input":"2025-06-03T17:15:45.735666Z","iopub.status.idle":"2025-06-03T17:15:45.745166Z","shell.execute_reply.started":"2025-06-03T17:15:45.735644Z","shell.execute_reply":"2025-06-03T17:15:45.744293Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"def process_text(text):\n    text=text.lower()\n    text=re.sub(r\"<.*?>\",\"\",text)\n    text= re.sub(r\"[^a-zA-Z]\", \" \", text)\n    words = text.split()\n    words=[lemmatizer.lemmatize(word) for word in words if word not in stop_words]\n    return \" \".join(words)\n\ndf['clean_review'] = df['review'].apply(process_text)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:18:45.266172Z","iopub.execute_input":"2025-06-03T17:18:45.266520Z","iopub.status.idle":"2025-06-03T17:19:19.625657Z","shell.execute_reply.started":"2025-06-03T17:18:45.266499Z","shell.execute_reply":"2025-06-03T17:19:19.624632Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"df['label'] = df['sentiment'].map({'positive': 1, 'negative': 0})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:19:25.750322Z","iopub.execute_input":"2025-06-03T17:19:25.750639Z","iopub.status.idle":"2025-06-03T17:19:25.766747Z","shell.execute_reply.started":"2025-06-03T17:19:25.750616Z","shell.execute_reply":"2025-06-03T17:19:25.765733Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\ntfidf = TfidfVectorizer(max_features=5000)\nX = tfidf.fit_transform(df['clean_review']).toarray()\ny = df['label'].values","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:20:17.986155Z","iopub.execute_input":"2025-06-03T17:20:17.986503Z","iopub.status.idle":"2025-06-03T17:20:27.075653Z","shell.execute_reply.started":"2025-06-03T17:20:17.986468Z","shell.execute_reply":"2025-06-03T17:20:27.074592Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:20:32.385653Z","iopub.execute_input":"2025-06-03T17:20:32.385948Z","iopub.status.idle":"2025-06-03T17:20:33.388194Z","shell.execute_reply.started":"2025-06-03T17:20:32.385928Z","shell.execute_reply":"2025-06-03T17:20:33.387209Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, classification_report\n\nmodel = LogisticRegression()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:20:39.852040Z","iopub.execute_input":"2025-06-03T17:20:39.853016Z","iopub.status.idle":"2025-06-03T17:20:51.000518Z","shell.execute_reply.started":"2025-06-03T17:20:39.852978Z","shell.execute_reply":"2025-06-03T17:20:50.999575Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 0.8886\n              precision    recall  f1-score   support\n\n           0       0.90      0.87      0.89      4961\n           1       0.88      0.90      0.89      5039\n\n    accuracy                           0.89     10000\n   macro avg       0.89      0.89      0.89     10000\nweighted avg       0.89      0.89      0.89     10000\n\n","output_type":"stream"}],"execution_count":13},{"cell_type":"code","source":"from sklearn.ensemble import RandomForestClassifier","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:21:52.605526Z","iopub.execute_input":"2025-06-03T17:21:52.605897Z","iopub.status.idle":"2025-06-03T17:21:52.926643Z","shell.execute_reply.started":"2025-06-03T17:21:52.605873Z","shell.execute_reply":"2025-06-03T17:21:52.925935Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"model2 = RandomForestClassifier(n_estimators=100, max_depth=30, random_state=42)\nmodel2.fit(X_train, y_train)\ny_pred = model2.predict(X_test)\n\nprint(\"Accuracy:\", accuracy_score(y_test, y_pred))\nprint(classification_report(y_test, y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:25:33.501605Z","iopub.execute_input":"2025-06-03T17:25:33.501961Z","iopub.status.idle":"2025-06-03T17:26:47.069577Z","shell.execute_reply.started":"2025-06-03T17:25:33.501926Z","shell.execute_reply":"2025-06-03T17:26:47.068538Z"}},"outputs":[{"name":"stdout","text":"Accuracy: 0.8472\n              precision    recall  f1-score   support\n\n           0       0.86      0.82      0.84      4961\n           1       0.83      0.87      0.85      5039\n\n    accuracy                           0.85     10000\n   macro avg       0.85      0.85      0.85     10000\nweighted avg       0.85      0.85      0.85     10000\n\n","output_type":"stream"}],"execution_count":16},{"cell_type":"code","source":"from xgboost import XGBClassifier\n\nxgb = XGBClassifier(use_label_encoder=False, eval_metric='logloss')\nxgb.fit(X_train, y_train)\ny_pred_xgb = xgb.predict(X_test)\nprint(\"XGBoost Accuracy:\", accuracy_score(y_test, y_pred_xgb))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-03T17:42:31.746005Z","iopub.execute_input":"2025-06-03T17:42:31.746374Z","iopub.status.idle":"2025-06-03T17:44:04.534512Z","shell.execute_reply.started":"2025-06-03T17:42:31.746350Z","shell.execute_reply":"2025-06-03T17:44:04.533868Z"}},"outputs":[{"name":"stdout","text":"XGBoost Accuracy: 0.8598\n","output_type":"stream"}],"execution_count":17},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}